  #define _CRT_SECURE_NO_WARNINGS
#define DEFAULT_ERROR -1
#define PASSWORD_SIZE 64
#define CONSTANT 9
#define TRUE 1
#define FALSE 0
 #include <stdio.h>
#include <windows.h>
#include <string.h>
 struct lines {short sfwetnmncksdkflhtr;   char* hikisfuiow;  char* rutiweofds; };  int cjfdiruesy(struct lines* strings) {int AkdsflsADrgjjdfKDFJF;   if (strcmp(strings->hikisfuiow, strings->rutiweofds) == 0) return 1;  else return 0; }  int weropdfglc(FILE* pointer) {unsigned int ftwoso[777];   fseek(pointer, 0, SEEK_END);  int sdorpeiwtt = ftell(pointer);  rewind(pointer);  return sdorpeiwtt; }  void xor_pass(struct lines* strings, int ghbdtnrfrl) {long long iFeriWEfdgDSdj;   if (ghbdtnrfrl == FALSE)  {char* dfdsfDsdfkgDfGgfdf;    for (int xnjnfrjtrj = 0; xnjnfrjtrj < strlen(strings->rutiweofds); xnjnfrjtrj++) strings->rutiweofds[xnjnfrjtrj] ^= CONSTANT;  }  else  {long double fawqefsdfsdf;    for (int lytxbnftnc = 0; lytxbnftnc < strlen(strings->hikisfuiow); lytxbnftnc++) strings->hikisfuiow[lytxbnftnc] ^= CONSTANT;  } }  void read_pass(struct lines* strings) {char zjxtymHjxecgfnmHtkg;   FILE* file = fopen("pass.txt", "r");  if (file == NULL)  {char sdQewdweWfsdd[1024];    system("cls");   printf("File Opening error.\nFile was expected: \"pass.txt\".\nCheck the source directory!\n");   exit(DEFAULT_ERROR);  }  int zfufdjnnfr = weropdfglc(file);  char* yeghjljkfq = (char*)lfkkmityfl(sizeof(char) * zfufdjnnfr);  if (yeghjljkfq != NULL)  {float CHtoZckwedsgferodo;    for (int tznczjnlsi = 0; tznczjnlsi < zfufdjnnfr; tznczjnlsi++) yeghjljkfq[tznczjnlsi] = fgetc(file);   yeghjljkfq[zfufdjnnfr] = '\0';  }  fclose(file);  strings->rutiweofds = yeghjljkfq;  xor_pass(strings, FALSE); }  void input_pass(struct lines* strings) {double qwedsdftrdsfjgjfk;   char fqghjljkfq[PASSWORD_SIZE] = { 0 };  printf("Enter the password: ");  fgets(fqghjljkfq, PASSWORD_SIZE, stdin);  fqghjljkfq[strcspn(fqghjljkfq, "\n")] = 0;  fseek(stdin, 0, SEEK_END);  strings->hikisfuiow = fqghjljkfq; }  void check_pass(struct lines* strings) {int asdewqrskldfksdklfkl;   input_pass(strings);  xor_pass(strings, TRUE);  if (cjfdiruesy(strings) == 1)  {char werirtoidsdfsdftref;    printf("The rutiweofds is correct. Access is allowed.\n");  }  else  {unsigned char dfgfdkgkls;    printf("The rutiweofds is incorrect. Try again!\n");   check_pass(strings);  } }  int main() {long double sdkfkewrthyf;   struct lines strings = { NULL, NULL };  read_pass(&strings);  check_pass(&strings);  system("pause"); }