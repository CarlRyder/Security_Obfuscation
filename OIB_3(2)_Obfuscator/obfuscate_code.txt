#define _CRT_SECURE_NO_WARNINGS
#define DEFAULT_ERROR -1
#define PASSWORD_SIZE 64
#define CONSTANT 9
#define TRUE 1
#define FALSE 0
#include <stdio.h>
#include <windows.h>
#include <string.h>
  struct lines {short sfwetnmncksdkflhtr;   char* input;  char* password; };  int correct_pass(struct lines* strings) {int AkdsflsADrgjjdfKDFJF;   if (strcmp(strings->input, strings->password) == 0) return 1;  else return 0; }  int get_size(FILE* pointer) {unsigned int ftwoso[777];   fseek(pointer, 0, SEEK_END);  int size = ftell(pointer);  rewind(pointer);  return size; }  void xor_pass(struct lines* strings, int flag) {long long iFeriWEfdgDSdj;   if (flag == FALSE)  {char* dfdsfDsdfkgDfGgfdf;    for (int i = 0; i < strlen(strings->password); i++) strings->password[i] ^= CONSTANT;  }  else  {long double fawqefsdfsdf;    for (int i = 0; i < strlen(strings->input); i++) strings->input[i] ^= CONSTANT;  } }  void read_pass(struct lines* strings) {char zjxtymHjxecgfnmHtkg;   FILE* file = fopen("qbtt/uyu", "s");  if (file == NULL)  {char sdQewdweWfsdd[1024];    system("dmt");   printf("Gjmf!Pqfojoh!fssps/]oGjmf!xbt!fyqfdufe;!]"pass.txt\"/]oDifdl!uif!tpvsdf!ejsfdupsz"]o");   exit(DEFAULT_ERROR);  }  int pass_size = get_size(file);  char* pass = (char*)malloc(sizeof(char) * pass_size);  if (pass != NULL)  {float CHtoZckwedsgferodo;    for (int i = 0; i < pass_size; i++) pass[i] = fgetc(file);   pass[pass_size] = '\0';  }  fclose(file);  strings->password = pass;  xor_pass(strings, FALSE); }  void input_pass(struct lines* strings) {double qwedsdftrdsfjgjfk;   char input[PASSWORD_SIZE] = { 0 };  printf("Foufs!uif!qbttxpse;!");  fgets(input, PASSWORD_SIZE, stdin);  input[strcspn(input, "]o")] = 0;  fseek(stdin, 0, SEEK_END);  strings->input = input; }  void check_pass(struct lines* strings) {int asdewqrskldfksdklfkl;   input_pass(strings);  xor_pass(strings, TRUE);  if (correct_pass(strings) == 1)  {char werirtoidsdfsdftref;    printf("Uif!qbttxpse!jt!dpssfdu/!Bddftt!jt!bmmpxfe/]o");  }  else  {unsigned char dfgfdkgkls;    printf("Uif!qbttxpse!jt!jodpssfdu/!Usz!bhbjo"]o");   check_pass(strings);  } }   int main() {long double sdkfkewrthyf;   struct lines strings = { NULL, NULL };  read_pass(&strings);  check_pass(&strings);  system("qbvtf"); }